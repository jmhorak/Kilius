//////////////////////////////////////////////////////////////////////////
// File: resolveURL.js
//
// Description: 
//   Resolves a URL from the server backend
//
//////////////////////////////////////////////////////////////////////////
var transform = require('../modTransform/transformService.js');

/**
 * Resolves the given URL to the address to forward to
 *
 * @param data - Object containing the database, client info, and URL
 * @param cb - Callback when successfully resolved
 * @param errCB - Callback when there is a problem
 */
exports.resolveURL = function (data, cb, errCB) {
  var id = transform.uriToLinkID(data.uri),
      links = data.database.collection('links'),
      payload = {};

  // Validate the URL
  if (match === null) {
    errCB({
      logMessage: ['Invalid URI ', JSON.stringify(data.uri), ' does not pass regex'].join(''),
      code: 404
    });
  } else {
    payload = {
      date: new Date,
      address: data.clientID,
      userAgent: data.userAgent
    }
    links.findAndModify({linkID: id}, [], { $push: {hits: payload }}, {safe: true},
        function(err, result) {
          if (err) {
            errCB({
              logMessage: 'Failure updating resolved link for ID ' + id,
              error: err,
              code: 500,
              failedPayload: payload
            });
          } else if (result && result.longLink) {
            // The long link was found
            cb(result.longLink);
          } else {
            // The long link was not found
            errCB({
              logMessage: ['Long link for id ', id, ' not found'].join(''),
              code: 404
            });
          }
        }
    );
  }
};