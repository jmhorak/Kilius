/**
 * Kili.us transformation service - transforms a number ID to a string and back
 * Author: Jeff Horak
 */

/**
 * Letters in the language, converting from base 10 number to base lan.length string
 * @type {Array}
 */
var lan = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0', 'b', 'B', 'c', 'C', 'd', 'D',
           'f', 'F', 'g', 'G', 'h', 'H', 'j', 'J', 'k', 'K', 'l', 'L', 'm', 'M', 'n', 'N',
           'p', 'P', 'q', 'Q', 'r', 'R', 's', 'S', 't', 'T', 'v', 'V', 'w', 'W', 'x', 'X',
           'y', 'Y', 'z', 'Z'],
    regex = /^\/\+\/([0-9bcdfghjklmnpqrstvwxyz]+)$/i,
    revLan = {};

/**
 * Initialize the reverse language lookup from the lan array
 */
(function() {
  for (var i = 0; i < lan.length; i++) {
    revLan[lan[i]] = i;
  }
})();

/**
 * Parse a URI string of the form /+/<lan>
 *
 * @param uri
 * @return {*} The string match or null
 */
exports.parseURI = function(uri) {
  var matches;

  // Limit the size of the URI, don't spend a lot of time examining huge strings
  if (typeof uri !== 'string' || uri.length > 11) {
    return null;
  }

  matches = regex.exec(uri);
  if (matches === null || matches.length < 2) {
    return null;
  } else {
    return matches[1];
  }
};

/**
 * Converts a URI to an ID
 * @param uri
 */
exports.uriToLinkID = function(uri) {
  var id = 0,
      cnt = lan.length,
      match = this.parseURI(uri);

  if (match === null) { return null; }

  for (var idx = match.length - 1; idx >= 0; idx--) {
    id *= cnt;
    id += revLan[match[idx]];
  }

  return id;
};

/**
 * Converts an ID to a URI
 * @param linkID
 */
exports.linkIDToURI = function(linkID) {
  var cnt = lan.length,
      tmp = 0,
      uriBuild = [];

  if (linkID === 0) {
    // Special case
    uriBuild.push(lan[linkID]);
  } else {
    while (linkID > 0) {
      tmp = linkID % cnt;
      uriBuild.push(lan[tmp]);
      linkID -= tmp;
      linkID /= cnt;
    }
  }

  return uriBuild.join('');
};