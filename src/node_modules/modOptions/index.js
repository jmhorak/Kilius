/**
 * Kili.us server options module
 *
 * Author: Jeff Horak
 * Date: 6/6/12
 */

var fs = require('fs'),
    p = require('modPromise'),
    properties = [],
    defaults = {
      database: 'Kilius',
      databaseUser: '',
      databasePassword: '',
      throttleLimit: 25,
      throttleTime: 86400000
    };

(function() {
  for(var prop in defaults) {
    if (defaults.hasOwnProperty(prop)) {

      properties.push(prop);
      // Set the defaults on the exported object
      exports[prop] = defaults[prop];
    }
  }

})()

function setDefaults() {
  var i = 0,
      len = properties.length;

  for (; i < len; i++) {
    exports[properties[ i ]] = defaults[properties[ i ]];
  }
}

exports.init = function(filename) {

  var promise = new p.Promise();

  fs.readFile(filename, 'utf8', function(err, data) {
    var options,
        i = 0,
        len = properties.length;

    function setValue (property) {

      var prop = options[ property ];
      // Want to allow 0 and empty string, check for null or undefined
      if (prop != null) {
        exports[ property ] = prop;
      }

    };

    if (err) {
      promise.reject(err);
    } else {
      try {
        // Remove any newlines or tabs
        data = data.replace(/[\n\t]/g, '');
        options = JSON.parse(data);

        // Set up the rest of the object
        for (; i < len; i++) {
          setValue(properties[ i ]);
        }

        // Resolve, ready
        promise.resolve();

      } catch(e) {
        // Invalid JSON data
        promise.reject(e);
      }
    }

  });

  setDefaults();

  return promise;
};