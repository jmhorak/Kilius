//////////////////////////////////////////////////////////////////////////
// File: shortenURL.js
//
// Description: 
//   Takes a URL and an IP address and inserts it into the database.
//      A unique string key is produced that allows fetching the URL again later
//////////////////////////////////////////////////////////////////////////
var clients = {},
    blacklist = {};

var writeToDB = function(data, db) {
  var writeObj = {
    createDate: new Date,
    longURL: data.url,
    clientID: data.clientID,
    hits: 0,
    shortURL: 0 // TODO: How does $inc work?
  }
}

var getNextShortenedURL = function(num) {
  var lan = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0', 'b', 'c', 'd', 'f', 'g', 'h', 'j',
             'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'],
      cnt = lan.length,
      url = ['http://kili.us/+/'],
      addToURL = function(n) { url.push(lan[Math.floor(n%cnt)]); }

  // Get the next base 'cnt' number
  while (num >= cnt) {
    addToURL(num);
    num /= cnt;
  }

  addToURL(num);



  return url.join('');
}

exports.shorten = function(data, cb, errorCB) {
   var clientID = data.clientID,
       db = data.dbConnect,
       regex = /^(?:(?:https?:\/\/)(?:[a-zA-Z0-9]*[-a-zA-Z0-9]*[a-zA-Z0-9])(?:\\.[a-zA-Z0-9]*[-a-zA-Z0-9]*[a-zA-Z0-9])*(?:\\.[a-zA-Z]{2,6}))$/,
       url = "";

   if (data && data.url) {
     // Validiate the url against our regex
     regex.exec(data.url);

     // Check for black-listed clients
     if (blacklist[clientID] !== undefined) {
       errorCB(BLACKLIST);
     }

     // Throttle the connected client
     if (clients[clientID] === undefined) {
       // First time
       clients[clientID] = 0;
       setTimeout(function() {
         // After 24 hours, reset the throttling
         delete clients[clientID];
       }, 86400000);

       url = getNextShortenedURL();

       cb();

     } else if (clients[clientID] < 25) {
       clients[clientID] += 1;
       cb(getNextShortenedURL());

     } else {
       errorCB(LIMIT);
     }
   }
}